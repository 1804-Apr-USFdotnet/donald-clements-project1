//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.ComponentModel.DataAnnotations;
using System.Linq;

namespace RevViews.Models
{
    using System;
    using System.Collections.Generic;

    public partial class Restaurant
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage",
            "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Restaurant()
        {
            this.Reviews = new HashSet<Review>();
        }

        [Key] public int? RestaurantID { get; set; }
        [Display(Name = "Restaurant Name")]
        [Required] public string RestaurantName { get; set; }
        [Display(Name = "Street")]
        [Required] public string AddressLineOne { get; set; }
        [Required] public string City { get; set; }

        [Required]
        [Display(Name = "State Code")]
        [RegularExpression(@"^(?:A[KLRZ]|C[AOT]|D[CE]|FL|GA|HI|I[ADLN]|K[SY]|LA|M[ADEINOST]|N[CDEHJMVY]|O[HKR]|P[AR]|RI|S[CD]|T[NX]|UT|V[AIT]|W[AIVY])$",
            ErrorMessage = "The state code must be in proper format. E.g. TX")]
        public string StateCode { get; set; }

        [Display(Name = "Postal Code")]
        [Required(ErrorMessage = "Zip is Required")]
        [RegularExpression(@"^\d{5}(-\d{4})?$", ErrorMessage = "Invalid Zip")]
        [DataType(DataType.PostalCode)]
        public string PostalCode { get; set; }

        [Display(Name = "Listed Phone")]
        [DataType(DataType.PhoneNumber)]
        [RegularExpression(@"^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$", ErrorMessage = "Not a valid phone number")]
        public string Phone { get; set; }
        [DataType(DataType.Url)] public string Website { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage",
            "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Review> Reviews { get; set; }

        
        public double Rating()
        {
            if (Reviews.Count != 0)
            {
                try
                {
                    return Math.Round(Reviews.Average(review => review.Rating), 1);
                }
                catch (Exception e)
                {
                    Console.WriteLine(e);
                }

            }

            return 0;
        }
    }
}